{"version":3,"file":"2d-translation.bundle.js","mappings":"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","sources":["webpack://dice-webgl-renderer/webpack/bootstrap","webpack://dice-webgl-renderer/./src/webglUtils.ts","webpack://dice-webgl-renderer/./src/webgl-lessons-ui.ts","webpack://dice-webgl-renderer/./src/math.ts","webpack://dice-webgl-renderer/./src/2d-translation.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Resize a canvas to match the size its displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] amount to multiply by.\n *    Pass in window.devicePixelRatio for native pixels.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:webgl-utils\n */\nexport const resizeCanvasToDisplaySize = (\n  canvas: HTMLCanvasElement,\n  multiplier: number\n): boolean => {\n  multiplier = multiplier || 1\n  const width = (canvas.clientWidth * multiplier) | 0\n  const height = (canvas.clientHeight * multiplier) | 0\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width\n    canvas.height = height\n    return true\n  }\n  return false\n}\n\nexport const observeAndResizeCanvas = (\n  canvas: HTMLCanvasElement,\n  initialSize: [number, number]\n): CanvasResizer => {\n  // init with the default canvas size\n  const canvasToDisplaySizeMap: Map<Element, number[]> = new Map([\n    [canvas, initialSize],\n  ])\n\n  const onResize = (entries: any[]) => {\n    for (const entry of entries) {\n      let width\n      let height\n      let dpr = window.devicePixelRatio\n      if (entry.devicePixelContentBoxSize) {\n        // NOTE: Only this path gives the correct answer\n        // The other paths are imperfect fallbacks\n        // for browsers that don't provide anyway to do this\n        width = entry.devicePixelContentBoxSize[0].inlineSize\n        height = entry.devicePixelContentBoxSize[0].blockSize\n        dpr = 1 // it's already in width and height\n      } else if (entry.contentBoxSize) {\n        if (entry.contentBoxSize[0]) {\n          width = entry.contentBoxSize[0].inlineSize\n          height = entry.contentBoxSize[0].blockSize\n        } else {\n          width = entry.contentBoxSize.inlineSize\n          height = entry.contentBoxSize.blockSize\n        }\n      } else {\n        width = entry.contentRect.width\n        height = entry.contentRect.height\n      }\n      const displayWidth = Math.round(width * dpr)\n      const displayHeight = Math.round(height * dpr)\n      canvasToDisplaySizeMap.set(entry.target, [displayWidth, displayHeight])\n    }\n  }\n\n  const resizeObserver = new ResizeObserver(onResize)\n  resizeObserver.observe(canvas, { box: 'content-box' })\n\n  const resizeCanvasToDisplaySize = (): boolean => {\n    // Get the size the browser is displaying the canvas in device pixels.\n    const [displayWidth, displayHeight] = canvasToDisplaySizeMap.get(canvas)\n\n    // Check if the canvas is not the same size.\n    const needResize =\n      canvas.width !== displayWidth || canvas.height !== displayHeight\n\n    if (needResize) {\n      // Make the canvas the same size\n      canvas.width = displayWidth\n      canvas.height = displayHeight\n    }\n    return needResize\n  }\n\n  return { resizeCanvasToDisplaySize }\n}\n\nexport type CanvasResizer = {\n  resizeCanvasToDisplaySize: () => boolean\n}\n\nconst createShader = (\n  gl: WebGL2RenderingContext,\n  type: number,\n  source: string\n): WebGLShader => {\n  const shader = gl.createShader(type)\n  gl.shaderSource(shader, source)\n  gl.compileShader(shader)\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\n  if (success) {\n    return shader\n  }\n\n  console.log(gl.getShaderInfoLog(shader))\n  gl.deleteShader(shader)\n}\n\nconst createProgram = (\n  gl: WebGL2RenderingContext,\n  shaders: [WebGLShader, WebGLShader]\n): WebGLProgram => {\n  const [vertexShader, fragmentShader] = shaders\n\n  const program = gl.createProgram()\n  gl.attachShader(program, vertexShader)\n  gl.attachShader(program, fragmentShader)\n  gl.linkProgram(program)\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS)\n  if (success) {\n    return program\n  }\n\n  console.log(gl.getProgramInfoLog(program))\n  gl.deleteProgram(program)\n}\n\nexport const createProgramFromSources = (\n  gl: WebGL2RenderingContext,\n  sources: [string, string]\n): WebGLProgram => {\n  const [vert, frag] = sources\n  return createProgram(gl, [\n    createShader(gl, gl.VERTEX_SHADER, vert),\n    createShader(gl, gl.FRAGMENT_SHADER, frag),\n  ])\n}\n\nexport const showWebGLUnsupportedError = (parentElement: Element): void => {\n  const errorMessage = document.createElement('div')\n  errorMessage.className = 'error'\n  const p1 = document.createElement('p')\n  p1.appendChild(\n    document.createTextNode(\n      \"Sorry, your browser doesn't seem to support WebGL 2 :(\"\n    )\n  )\n  errorMessage.appendChild(p1)\n  const p2 = document.createElement('p')\n\n  p2.appendChild(\n    document.createTextNode('Try running in the latest Firefox or Chrome.')\n  )\n  errorMessage.appendChild(p2)\n  parentElement.appendChild(errorMessage)\n}\n","/*\n * Copyright 2021, GFXFundamentals.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of GFXFundamentals. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst gopt: any = getQueryParams()\n\ntype SliderOptions = {\n  precision?: number\n  min?: number\n  step?: number\n  value?: number\n  max?: number\n  name: string\n  uiPrecision?: number\n  uiMult?: number\n  slide: (evt: Event, data: { value: number }) => void\n}\n\ntype SliderType = {\n  elem: Element\n  updateValue: (newValue: number) => void\n}\n\nexport function setupSlider(\n  parentSelector: string,\n  options: SliderOptions\n): SliderType {\n  const uiParent = document.querySelector(parentSelector)\n  if (!uiParent) {\n    // like jquery don't fail on a bad selector\n    return\n  }\n  const parent = document.createElement('div')\n  uiParent.appendChild(parent)\n\n  return createSlider(parent, options) // eslint-disable-line\n}\n\nfunction createSlider(parent: Element, options: SliderOptions): SliderType {\n  const precision = options.precision || 0\n  let min = options.min || 0\n  const step = options.step || 1\n  let value = options.value || 0\n  let max = options.max || 1\n  const fn = options.slide\n  const name = gopt['ui-' + options.name] || options.name\n  const uiPrecision =\n    options.uiPrecision === undefined ? precision : options.uiPrecision\n  const uiMult = options.uiMult || 1\n\n  min /= step\n  max /= step\n  value /= step\n\n  parent.innerHTML = `\n      <div class=\"gman-widget-outer\">\n        <div class=\"gman-widget-label\">${name}</div>\n        <div class=\"gman-widget-value\"></div>\n        <input class=\"gman-widget-slider\" type=\"range\" min=\"${min}\" max=\"${max}\" value=\"${value}\" />\n      </div>\n    `\n  const valueElem = parent.querySelector('.gman-widget-value')\n  const sliderElem: HTMLInputElement = parent.querySelector(\n    '.gman-widget-slider'\n  )\n\n  function updateValue(value: number) {\n    valueElem.textContent = (value * step * uiMult).toFixed(uiPrecision)\n  }\n\n  updateValue(value)\n\n  function handleChange(event: Event) {\n    const value = parseInt((event.target as HTMLInputElement).value)\n    updateValue(value)\n    fn(event, { value: value * step })\n  }\n\n  sliderElem.addEventListener('input', handleChange)\n  sliderElem.addEventListener('change', handleChange)\n\n  return {\n    elem: parent,\n    updateValue: (v: number) => {\n      v /= step\n      sliderElem.value = String(v)\n      updateValue(v)\n    },\n  }\n}\n\nexport function makeSlider(options: SliderOptions): SliderType {\n  const div = document.createElement('div')\n  return createSlider(div, options)\n}\n\nlet widgetId = 0\nfunction getWidgetId() {\n  return '__widget_' + widgetId++\n}\n\ntype CheckboxOptions = {\n  name: string\n  value: boolean\n  change: (evt: Event, val: { value: boolean }) => void\n}\n\ntype CheckboxType = {\n  elem: Element\n  updateValue: (v: any) => void\n}\n\nexport function makeCheckbox(options: CheckboxOptions): CheckboxType {\n  const div = document.createElement('div')\n  div.className = 'gman-widget-outer'\n  const label = document.createElement('label')\n  const id = getWidgetId()\n  label.setAttribute('for', id)\n  label.textContent = gopt['ui-' + options.name] || options.name\n  label.className = 'gman-checkbox-label'\n  const input = document.createElement('input')\n  input.type = 'checkbox'\n  input.checked = options.value\n  input.id = id\n  input.className = 'gman-widget-checkbox'\n  div.appendChild(label)\n  div.appendChild(input)\n  input.addEventListener('change', function (e) {\n    options.change(e, {\n      value: (e.target as HTMLInputElement).checked,\n    })\n  })\n\n  return {\n    elem: div,\n    updateValue: function (v: any) {\n      input.checked = !!v\n    },\n  }\n}\n\nfunction makeOption(options: any) {\n  const div = document.createElement('div')\n  div.className = 'gman-widget-outer'\n  const label = document.createElement('label')\n  const id = getWidgetId()\n  label.setAttribute('for', id)\n  label.textContent = gopt['ui-' + options.name] || options.name\n  label.className = 'gman-widget-label'\n  const selectElem = document.createElement('select')\n  options.options.forEach((name: string, ndx: any) => {\n    const opt = document.createElement('option')\n    opt.textContent = gopt['ui-' + name] || name\n    opt.value = ndx\n    opt.selected = ndx === options.value\n    selectElem.appendChild(opt)\n  })\n  selectElem.className = 'gman-widget-select'\n  div.appendChild(label)\n  div.appendChild(selectElem)\n  selectElem.addEventListener('change', function (e) {\n    options.change(e, {\n      value: selectElem.selectedIndex,\n    })\n  })\n\n  return {\n    elem: div,\n    updateValue: function (v: any) {\n      selectElem.selectedIndex = v\n    },\n  }\n}\n\nfunction noop() {}\n\nfunction genSlider(object: any, ui: any) {\n  const changeFn = ui.change || noop\n  ui.name = ui.name || ui.key\n  ui.value = object[ui.key]\n  ui.slide =\n    ui.slide ||\n    function (event: any, uiInfo: any) {\n      object[ui.key] = uiInfo.value\n      changeFn()\n    }\n  return makeSlider(ui)\n}\n\nfunction genCheckbox(object: any, ui: any) {\n  const changeFn = ui.change || noop\n  ui.value = object[ui.key]\n  ui.name = ui.name || ui.key\n  ui.change = function (event: any, uiInfo: any) {\n    object[ui.key] = uiInfo.value\n    changeFn()\n  }\n  return makeCheckbox(ui)\n}\n\nfunction genOption(object: any, ui: any) {\n  const changeFn = ui.change || noop\n  ui.value = object[ui.key]\n  ui.name = ui.name || ui.key\n  ui.change = function (event: any, uiInfo: any) {\n    object[ui.key] = uiInfo.value\n    changeFn()\n  }\n  return makeOption(ui)\n}\n\nconst uiFuncs: any = {\n  slider: genSlider,\n  checkbox: genCheckbox,\n  option: genOption,\n}\n\ntype UI = {\n  type: 'slider' | 'checkbox' | 'option'\n}\n\nexport function setupUI(\n  parent: Element,\n  object: Record<string, any>,\n  uiInfos: [UI]\n): any {\n  const widgets: any = {}\n  uiInfos.forEach(function (ui: any) {\n    const widget: any = uiFuncs[ui.type](object, ui)\n    parent.appendChild(widget.elem)\n    widgets[ui.key] = widget\n  })\n  return widgets\n}\n\nexport function updateUI(\n  widgets: Record<string, any>,\n  data: Record<string, any>\n): void {\n  Object.keys(widgets).forEach((key) => {\n    const widget = widgets[key]\n    widget.updateValue(data[key])\n  })\n}\n\ndeclare global {\n  interface Window {\n    hackedParams: any\n  }\n}\n\nfunction getQueryParams() {\n  const params: any = {}\n  if (window.hackedParams) {\n    Object.keys(window.hackedParams).forEach(function (key) {\n      params[key] = window.hackedParams[key]\n    })\n  }\n  if (window.location.search) {\n    window.location.search\n      .substring(1)\n      .split('&')\n      .forEach(function (pair) {\n        const keyValue = pair.split('=').map(function (kv) {\n          return decodeURIComponent(kv)\n        })\n        params[keyValue[0]] = keyValue[1]\n      })\n  }\n  return params\n}\n","// prettier-ignore\nexport type Mat3 = [\n  number, number, number,\n  number, number, number,\n  number, number, number,\n]\n\n// prettier-ignore\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n]\n\nexport type Vec3 = [number, number, number]\nexport type Vec4 = [number, number, number, number]\n\nexport const degToRad = (degrees: number): number => (degrees * Math.PI) / 180\n\nexport const radToDeg = (radians: number): number => (radians * 180) / Math.PI\n\nexport const cross = (a: Vec3, b: Vec3): Vec3 => [\n  a[1] * b[2] - a[2] * b[1],\n  a[2] * b[0] - a[0] * b[2],\n  a[0] * b[1] - a[1] * b[0],\n]\n\nexport const subtractVectors = (a: Vec3, b: Vec3): Vec3 => [\n  a[0] - b[0],\n  a[1] - b[1],\n  a[2] - b[2],\n]\n\nexport const magnitude = (v: Vec3): number =>\n  Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2])\n\nexport const normalise = (v: Vec3): Vec3 => {\n  const length = magnitude(v)\n  // make sure we don't divide by 0\n  if (length > 0.00001) {\n    return [v[0] / length, v[1] / length, v[2] / length]\n  } else {\n    return [0, 0, 0]\n  }\n}\n\nexport const right = (): Vec3 => [1, 0, 0]\nexport const up = (): Vec3 => [0, 1, 0]\nexport const forward = (): Vec3 => [0, 0, 1]\n\nexport const m3 = {\n  multiply: (a: Mat3, b: Mat3): Mat3 => {\n    const a00 = a[0 * 3 + 0]\n    const a01 = a[0 * 3 + 1]\n    const a02 = a[0 * 3 + 2]\n    const a10 = a[1 * 3 + 0]\n    const a11 = a[1 * 3 + 1]\n    const a12 = a[1 * 3 + 2]\n    const a20 = a[2 * 3 + 0]\n    const a21 = a[2 * 3 + 1]\n    const a22 = a[2 * 3 + 2]\n    const b00 = b[0 * 3 + 0]\n    const b01 = b[0 * 3 + 1]\n    const b02 = b[0 * 3 + 2]\n    const b10 = b[1 * 3 + 0]\n    const b11 = b[1 * 3 + 1]\n    const b12 = b[1 * 3 + 2]\n    const b20 = b[2 * 3 + 0]\n    const b21 = b[2 * 3 + 1]\n    const b22 = b[2 * 3 + 2]\n\n    // prettier-ignore\n    return [\n      b00 * a00 + b01 * a10 + b02 * a20,\n      b00 * a01 + b01 * a11 + b02 * a21,\n      b00 * a02 + b01 * a12 + b02 * a22,\n      b10 * a00 + b11 * a10 + b12 * a20,\n      b10 * a01 + b11 * a11 + b12 * a21,\n      b10 * a02 + b11 * a12 + b12 * a22,\n      b20 * a00 + b21 * a10 + b22 * a20,\n      b20 * a01 + b21 * a11 + b22 * a21,\n      b20 * a02 + b21 * a12 + b22 * a22,\n    ];\n  },\n\n  // prettier-ignore\n  translation: (tx: number, ty: number): Mat3 => [\n    1, 0, 0,\n    0, 1, 0,\n    tx, ty, 1,\n  ],\n\n  rotation: (angleRads: number): Mat3 => {\n    const c = Math.cos(angleRads)\n    const s = Math.sin(angleRads)\n    // prettier-ignore\n    return [\n      c, -s, 0,\n      s, c, 0,\n      0, 0, 1,\n    ]\n  },\n\n  // prettier-ignore\n  scaling: (sx: number, sy: number): Mat3 => [\n    sx, 0, 0,\n    0, sy, 0,\n    0, 0, 1,\n  ],\n\n  // prettier-ignore\n  identity: (): Mat3 => [\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n  ],\n\n  // Note: this matrix flips the Y axis so that 0 is at the top.\n  // prettier-ignore\n  projection: (width: number, height: number): Mat3 => [\n    2 / width, 0, 0,\n    0, -2 / height, 0,\n    -1, 1, 1\n  ],\n}\n\nexport const m4 = {\n  // prettier-ignore\n  translation: (tx: number, ty: number, tz: number): Mat4 => [\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    tx, ty, tz, 1\n  ],\n\n  xRotation: (angleInRadians: number): Mat4 => {\n    const c = Math.cos(angleInRadians)\n    const s = Math.sin(angleInRadians)\n\n    // prettier-ignore\n    return [\n      1, 0, 0, 0,\n      0, c, s, 0,\n      0, -s, c, 0,\n      0, 0, 0, 1,\n    ]\n  },\n\n  yRotation: (angleInRadians: number): Mat4 => {\n    const c = Math.cos(angleInRadians)\n    const s = Math.sin(angleInRadians)\n\n    // prettier-ignore\n    return [\n      c, 0, -s, 0,\n      0, 1, 0, 0,\n      s, 0, c, 0,\n      0, 0, 0, 1,\n    ]\n  },\n\n  zRotation: (angleInRadians: number): Mat4 => {\n    const c = Math.cos(angleInRadians)\n    const s = Math.sin(angleInRadians)\n\n    // prettier-ignore\n    return [\n      c, s, 0, 0,\n      -s, c, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1,\n    ]\n  },\n\n  // prettier-ignore\n  scaling: (sx: number, sy: number, sz: number): Mat4 => [\n    sx, 0, 0, 0,\n    0, sy, 0, 0,\n    0, 0, sz, 0,\n    0, 0, 0, 1\n  ],\n\n  multiply: (a: Mat4, b: Mat4): Mat4 => {\n    const b00 = b[0 * 4 + 0]\n    const b01 = b[0 * 4 + 1]\n    const b02 = b[0 * 4 + 2]\n    const b03 = b[0 * 4 + 3]\n    const b10 = b[1 * 4 + 0]\n    const b11 = b[1 * 4 + 1]\n    const b12 = b[1 * 4 + 2]\n    const b13 = b[1 * 4 + 3]\n    const b20 = b[2 * 4 + 0]\n    const b21 = b[2 * 4 + 1]\n    const b22 = b[2 * 4 + 2]\n    const b23 = b[2 * 4 + 3]\n    const b30 = b[3 * 4 + 0]\n    const b31 = b[3 * 4 + 1]\n    const b32 = b[3 * 4 + 2]\n    const b33 = b[3 * 4 + 3]\n    const a00 = a[0 * 4 + 0]\n    const a01 = a[0 * 4 + 1]\n    const a02 = a[0 * 4 + 2]\n    const a03 = a[0 * 4 + 3]\n    const a10 = a[1 * 4 + 0]\n    const a11 = a[1 * 4 + 1]\n    const a12 = a[1 * 4 + 2]\n    const a13 = a[1 * 4 + 3]\n    const a20 = a[2 * 4 + 0]\n    const a21 = a[2 * 4 + 1]\n    const a22 = a[2 * 4 + 2]\n    const a23 = a[2 * 4 + 3]\n    const a30 = a[3 * 4 + 0]\n    const a31 = a[3 * 4 + 1]\n    const a32 = a[3 * 4 + 2]\n    const a33 = a[3 * 4 + 3]\n\n    // prettier-ignore\n    return [\n      b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\n      b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\n      b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\n      b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\n      b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\n      b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\n      b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\n      b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\n      b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\n      b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\n      b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\n      b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\n      b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\n      b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\n      b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\n      b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\n    ]\n  },\n\n  // prettier-ignore\n  orthographic: (left: number, right: number, bottom: number, top: number, near: number, far: number): Mat4 => [\n    2 / (right - left), 0, 0, 0,\n    0, 2 / (top - bottom), 0, 0,\n    0, 0, 2 / (near - far), 0,\n\n    (left + right) / (left - right),\n    (bottom + top) / (bottom - top),\n    (near + far) / (near - far),\n    1,\n  ],\n\n  perspective: (\n    fieldOfViewRadians: number,\n    aspect: number,\n    near: number,\n    far: number\n  ): Mat4 => {\n    const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewRadians)\n    const rangeInv = 1 / (near - far)\n\n    // prettier-ignore\n    return [\n      f / aspect, 0, 0, 0,\n      0, f, 0, 0,\n      0, 0, (near + far) * rangeInv, -1,\n      0, 0, near * far * rangeInv * 2, 0,\n    ]\n  },\n\n  inverse: (m: Mat4): Mat4 => {\n    const m00 = m[0 * 4 + 0]\n    const m01 = m[0 * 4 + 1]\n    const m02 = m[0 * 4 + 2]\n    const m03 = m[0 * 4 + 3]\n    const m10 = m[1 * 4 + 0]\n    const m11 = m[1 * 4 + 1]\n    const m12 = m[1 * 4 + 2]\n    const m13 = m[1 * 4 + 3]\n    const m20 = m[2 * 4 + 0]\n    const m21 = m[2 * 4 + 1]\n    const m22 = m[2 * 4 + 2]\n    const m23 = m[2 * 4 + 3]\n    const m30 = m[3 * 4 + 0]\n    const m31 = m[3 * 4 + 1]\n    const m32 = m[3 * 4 + 2]\n    const m33 = m[3 * 4 + 3]\n    const tmp_0 = m22 * m33\n    const tmp_1 = m32 * m23\n    const tmp_2 = m12 * m33\n    const tmp_3 = m32 * m13\n    const tmp_4 = m12 * m23\n    const tmp_5 = m22 * m13\n    const tmp_6 = m02 * m33\n    const tmp_7 = m32 * m03\n    const tmp_8 = m02 * m23\n    const tmp_9 = m22 * m03\n    const tmp_10 = m02 * m13\n    const tmp_11 = m12 * m03\n    const tmp_12 = m20 * m31\n    const tmp_13 = m30 * m21\n    const tmp_14 = m10 * m31\n    const tmp_15 = m30 * m11\n    const tmp_16 = m10 * m21\n    const tmp_17 = m20 * m11\n    const tmp_18 = m00 * m31\n    const tmp_19 = m30 * m01\n    const tmp_20 = m00 * m21\n    const tmp_21 = m20 * m01\n    const tmp_22 = m00 * m11\n    const tmp_23 = m10 * m01\n\n    const t0 =\n      tmp_0 * m11 +\n      tmp_3 * m21 +\n      tmp_4 * m31 -\n      (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31)\n    const t1 =\n      tmp_1 * m01 +\n      tmp_6 * m21 +\n      tmp_9 * m31 -\n      (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31)\n    const t2 =\n      tmp_2 * m01 +\n      tmp_7 * m11 +\n      tmp_10 * m31 -\n      (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31)\n    const t3 =\n      tmp_5 * m01 +\n      tmp_8 * m11 +\n      tmp_11 * m21 -\n      (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21)\n\n    const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3)\n\n    return [\n      d * t0,\n      d * t1,\n      d * t2,\n      d * t3,\n      d *\n        (tmp_1 * m10 +\n          tmp_2 * m20 +\n          tmp_5 * m30 -\n          (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30)),\n      d *\n        (tmp_0 * m00 +\n          tmp_7 * m20 +\n          tmp_8 * m30 -\n          (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30)),\n      d *\n        (tmp_3 * m00 +\n          tmp_6 * m10 +\n          tmp_11 * m30 -\n          (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30)),\n      d *\n        (tmp_4 * m00 +\n          tmp_9 * m10 +\n          tmp_10 * m20 -\n          (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20)),\n      d *\n        (tmp_12 * m13 +\n          tmp_15 * m23 +\n          tmp_16 * m33 -\n          (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33)),\n      d *\n        (tmp_13 * m03 +\n          tmp_18 * m23 +\n          tmp_21 * m33 -\n          (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33)),\n      d *\n        (tmp_14 * m03 +\n          tmp_19 * m13 +\n          tmp_22 * m33 -\n          (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33)),\n      d *\n        (tmp_17 * m03 +\n          tmp_20 * m13 +\n          tmp_23 * m23 -\n          (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23)),\n      d *\n        (tmp_14 * m22 +\n          tmp_17 * m32 +\n          tmp_13 * m12 -\n          (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22)),\n      d *\n        (tmp_20 * m32 +\n          tmp_12 * m02 +\n          tmp_19 * m22 -\n          (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02)),\n      d *\n        (tmp_18 * m12 +\n          tmp_23 * m32 +\n          tmp_15 * m02 -\n          (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12)),\n      d *\n        (tmp_22 * m22 +\n          tmp_16 * m02 +\n          tmp_21 * m12 -\n          (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02)),\n    ]\n  },\n\n  transformVector: (m: Mat4, v: Vec4): Vec4 => {\n    const dst: Vec4 = [0, 0, 0, 0]\n    for (let i = 0; i < 4; ++i) {\n      dst[i] = 0.0\n      for (let j = 0; j < 4; ++j) {\n        dst[i] += v[j] * m[j * 4 + i]\n      }\n    }\n    return dst\n  },\n\n  lookAt: (cameraPosition: Vec3, target: Vec3, up: Vec3): Mat4 => {\n    const zAxis = normalise(subtractVectors(cameraPosition, target))\n    const xAxis = normalise(cross(up, zAxis))\n    const yAxis = normalise(cross(zAxis, xAxis))\n\n    // prettier-ignore\n    return [\n      xAxis[0], xAxis[1], xAxis[2], 0,\n      yAxis[0], yAxis[1], yAxis[2], 0,\n      zAxis[0], zAxis[1], zAxis[2], 0,\n      cameraPosition[0], cameraPosition[1], cameraPosition[2], 1\n    ]\n  },\n}\n","import vertexShaderSource from './shaders/2d-transform-matrix.vert'\nimport fragmentShaderSource from './shaders/helloworld.frag'\nimport {\n  createProgramFromSources,\n  resizeCanvasToDisplaySize,\n  showWebGLUnsupportedError,\n} from './webglUtils'\nimport * as webglLessonsUI from './webgl-lessons-ui'\nimport { m3 } from './math'\n\nconst main = () => {\n  // Get a WebGL 2 context\n  const canvas: HTMLCanvasElement = document.querySelector('#c')\n  const gl = canvas.getContext('webgl2')\n  if (!gl) {\n    console.error(\"Couldn't activate webgl2 context\")\n    showWebGLUnsupportedError(canvas.parentElement)\n    return\n  }\n\n  // Lint the two shaders into a program\n  const program = createProgramFromSources(gl, [\n    vertexShaderSource,\n    fragmentShaderSource,\n  ])\n\n  // Look up where the vertex data needs to go\n  const positionAttributeLocation = gl.getAttribLocation(program, 'a_position')\n\n  // look up uniform locations\n  const colorLocation = gl.getUniformLocation(program, 'u_color')\n  const matrixLocation = gl.getUniformLocation(program, 'u_matrix')\n\n  // Create a buffer and put three 2d clip space points in it\n  const positionBuffer = gl.createBuffer()\n\n  // Create a vertex array object (attribute state)\n  const vao = gl.createVertexArray()\n\n  // and make it the one we're currently working with\n  gl.bindVertexArray(vao)\n\n  // Turn on the attribute\n  gl.enableVertexAttribArray(positionAttributeLocation)\n\n  // Bind it to ARRAY_BUFFER\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer)\n\n  // setRectangle(gl, translation[0], translation[1], width, height)\n  setGeometry(gl)\n\n  // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\n  const size = 2 // 2 components per iteration\n  const type = gl.FLOAT // the data is 32bit floats\n  const normalize = false // don't normalize the data\n  const stride = 0 // 0 = move forward size * sizeof(type) each iteration to get the next position\n  const offset = 0 // start at the beginning of the buffer\n  gl.vertexAttribPointer(\n    positionAttributeLocation,\n    size,\n    type,\n    normalize,\n    stride,\n    offset\n  )\n\n  // First let's make some variables\n  // to hold the translation, width and height of the rectangle\n  const translation = [150, 100]\n  let rotationInRadians = 0\n  const scale = [1, 1]\n  // const width = 100\n  // const height = 30\n  const color = [Math.random(), Math.random(), Math.random(), 1]\n\n  drawScene()\n\n  // Setup a ui.\n  webglLessonsUI.setupSlider('#ui', {\n    name: 'x',\n    slide: updatePosition(0),\n    max: gl.canvas.width,\n  })\n  webglLessonsUI.setupSlider('#ui', {\n    name: 'y',\n    slide: updatePosition(1),\n    max: gl.canvas.height,\n  })\n  webglLessonsUI.setupSlider('#ui', {\n    name: 'r',\n    slide: updateRotation,\n    max: 360,\n  })\n  webglLessonsUI.setupSlider('#ui', {\n    name: 'scaleX',\n    value: scale[0],\n    slide: updateScale(0),\n    min: -5,\n    max: 5,\n    step: 0.01,\n    precision: 2,\n  })\n  webglLessonsUI.setupSlider('#ui', {\n    name: 'scaleY',\n    value: scale[1],\n    slide: updateScale(1),\n    min: -5,\n    max: 5,\n    step: 0.01,\n    precision: 2,\n  })\n\n  function updatePosition(index: number) {\n    return (event: Event, ui: { value: number }) => {\n      translation[index] = ui.value\n      drawScene()\n    }\n  }\n\n  function updateRotation(event: Event, ui: { value: number }) {\n    const degrees = 360 - ui.value\n    rotationInRadians = (Math.PI / 180) * degrees\n    drawScene()\n  }\n\n  function updateScale(index: number) {\n    return (event: Event, ui: { value: number }) => {\n      scale[index] = ui.value\n      drawScene()\n    }\n  }\n\n  function drawScene() {\n    resizeCanvasToDisplaySize(gl.canvas, window.devicePixelRatio)\n\n    // Tell WebGL hot to convert from clip space to pixels\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n\n    // Clear the canvas\n    gl.clearColor(0, 0, 0, 0)\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n    // Tell it to use our program\n    gl.useProgram(program)\n\n    // Bind the attribute/buffer set we want\n    gl.bindVertexArray(vao)\n\n    // Compute the matrics\n    const projectionMatrix = m3.projection(\n      gl.canvas.clientWidth,\n      gl.canvas.clientHeight\n    )\n    const moveOriginMatrix = m3.translation(-50, -75)\n    const translationMatrix = m3.translation(translation[0], translation[1])\n    const rotationMatrix = m3.rotation(rotationInRadians)\n    const scaleMatrix = m3.scaling(scale[0], scale[1])\n\n    // Multiply the matrics\n    const matrix = [\n      projectionMatrix,\n      translationMatrix,\n      rotationMatrix,\n      scaleMatrix,\n      moveOriginMatrix,\n    ].reduce(m3.multiply)\n\n    // Set the matrix\n    gl.uniformMatrix3fv(matrixLocation, false, matrix)\n\n    // Set a random color\n    gl.uniform4fv(colorLocation, color)\n\n    // Draw\n    const primitiveType = gl.TRIANGLES\n    const offset = 0\n    const count = 18\n    gl.drawArrays(primitiveType, offset, count)\n  }\n\n  function setGeometry(gl: WebGL2RenderingContext) {\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array([\n        // left column\n        0, 0, 30, 0, 0, 150, 0, 150, 30, 0, 30, 150,\n\n        // top rung\n        30, 0, 100, 0, 30, 30, 30, 30, 100, 0, 100, 30,\n\n        // middle rung\n        30, 60, 67, 60, 30, 90, 30, 90, 67, 60, 67, 90,\n      ]),\n      gl.STATIC_DRAW\n    )\n  }\n}\n\nmain()\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","deleteShader","gopt","params","window","hackedParams","Object","keys","forEach","key","location","search","substring","split","pair","keyValue","map","kv","decodeURIComponent","getQueryParams","setupSlider","parentSelector","options","uiParent","document","querySelector","parent","createElement","appendChild","precision","min","step","value","max","fn","slide","name","uiPrecision","uiMult","innerHTML","valueElem","sliderElem","updateValue","textContent","toFixed","handleChange","event","parseInt","target","addEventListener","elem","v","String","createSlider","m3","a","b","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","tx","ty","angleRads","c","Math","cos","s","sin","canvas","getContext","error","parentElement","errorMessage","className","p1","createTextNode","p2","showWebGLUnsupportedError","program","sources","vert","frag","shaders","vertexShader","fragmentShader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","VERTEX_SHADER","FRAGMENT_SHADER","createProgramFromSources","positionAttributeLocation","getAttribLocation","colorLocation","getUniformLocation","matrixLocation","positionBuffer","createBuffer","vao","createVertexArray","bindVertexArray","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","setGeometry","FLOAT","vertexAttribPointer","translation","rotationInRadians","scale","color","random","updatePosition","index","ui","drawScene","updateScale","multiplier","width","clientWidth","height","clientHeight","resizeCanvasToDisplaySize","devicePixelRatio","viewport","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","useProgram","projectionMatrix","moveOriginMatrix","matrix","sx","sy","reduce","uniformMatrix3fv","uniform4fv","primitiveType","TRIANGLES","drawArrays","degrees","PI","main"],"sourceRoot":""}