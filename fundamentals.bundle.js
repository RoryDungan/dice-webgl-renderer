(()=>{"use strict";var e={667:e=>{e.exports='#version 300 es\n\n// fragment shaders don\'t have a default precision so we need\n// to pick one. highp is a good default. It means "high precision"\nprecision highp float;\n\nuniform vec4 u_color;\n\n// we need to declare an output for the fragment shader\nout vec4 outColor;\n\nvoid main() {\n    // Just set the output to a constant reddish-purple\n    outColor = u_color;\n}\n'},279:e=>{e.exports="#version 300 es\n\n// an attribute is an input (in) to a vertex shader.\n// It will receive data from a buffer\nin vec2 a_position;\n\nuniform vec2 u_resolution;\n\n// all shaders have a main function\nvoid main() {\n    // convert the position from pixels to 0.0 to 1.0\n    vec2 zeroToOne = a_position / u_resolution;\n\n    // convert from 0->1 to 0->2\n    vec2 zeroToTwo = zeroToOne * 2.0;\n\n    // convert from 0->2 to -1->+1 (clip space)\n    vec2 clipSpace = zeroToTwo - 1.0;\n\n    // gl_Position is a special variable a vertex shader\n    // is responsible for setting\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n}\n"}},o={};function t(n){var r=o[n];if(void 0!==r)return r.exports;var i=o[n]={exports:{}};return e[n](i,i.exports,t),i.exports}(()=>{var e=t(279),o=t(667);const n=(e,o,t)=>{const n=e.createShader(o);if(e.shaderSource(n,t),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS))return n;console.log(e.getShaderInfoLog(n)),e.deleteShader(n)},r=e=>Math.floor(Math.random()*e),i=(e,o,t,n,r)=>{const i=o,a=o+n,c=t,s=t+r;e.bufferData(e.ARRAY_BUFFER,new Float32Array([i,c,a,c,i,s,i,s,a,c,a,s]),e.STATIC_DRAW)};(()=>{const t=document.querySelector("#c").getContext("webgl2");t||console.error("Couldn't activate webgl2 context");const a=((e,o)=>{const[t,r]=o;return((e,o)=>{const[t,n]=o,r=e.createProgram();if(e.attachShader(r,t),e.attachShader(r,n),e.linkProgram(r),e.getProgramParameter(r,e.LINK_STATUS))return r;console.log(e.getProgramInfoLog(r)),e.deleteProgram(r)})(e,[n(e,e.VERTEX_SHADER,t),n(e,e.FRAGMENT_SHADER,r)])})(t,[e,o]),c=t.getAttribLocation(a,"a_position"),s=t.getUniformLocation(a,"u_resolution"),l=t.getUniformLocation(a,"u_color"),d=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,d);const h=t.createVertexArray();t.bindVertexArray(h),t.enableVertexAttribArray(c);const u=t.FLOAT;t.vertexAttribPointer(c,2,u,!1,0,0);const v=((e,o)=>{const t=new Map([[e,[300,150]]]);return new ResizeObserver((e=>{for(const o of e){let e,n,r=window.devicePixelRatio;o.devicePixelContentBoxSize?(e=o.devicePixelContentBoxSize[0].inlineSize,n=o.devicePixelContentBoxSize[0].blockSize,r=1):o.contentBoxSize?o.contentBoxSize[0]?(e=o.contentBoxSize[0].inlineSize,n=o.contentBoxSize[0].blockSize):(e=o.contentBoxSize.inlineSize,n=o.contentBoxSize.blockSize):(e=o.contentRect.width,n=o.contentRect.height);const i=Math.round(e*r),a=Math.round(n*r);t.set(o.target,[i,a])}})).observe(e,{box:"content-box"}),{resizeCanvasToDisplaySize:()=>{const[o,n]=t.get(e),r=e.width!==o||e.height!==n;return r&&(e.width=o,e.height=n),r}}})(t.canvas);requestAnimationFrame((()=>{v.resizeCanvasToDisplaySize(),t.viewport(0,0,t.canvas.width,t.canvas.height),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.useProgram(a),t.bindVertexArray(h),t.uniform2f(s,t.canvas.width,t.canvas.height);for(let e=0;e<50;++e){i(t,r(300),r(300),r(300),r(300)),t.uniform4f(l,Math.random(),Math.random(),Math.random(),1);const e=t.TRIANGLES,o=0,n=6;t.drawArrays(e,o,n)}}))})()})()})();
//# sourceMappingURL=fundamentals.bundle.js.map