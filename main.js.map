{"version":3,"file":"main.js","mappings":"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","sources":["webpack://dice-webgl-renderer/webpack/bootstrap","webpack://dice-webgl-renderer/./src/webglUtils.ts","webpack://dice-webgl-renderer/./src/index.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export const observeAndResizeCanvas = (\n  canvas: HTMLCanvasElement,\n  initialSize: [number, number]\n): CanvasResizer => {\n  // init with the default canvas size\n  const canvasToDisplaySizeMap: Map<Element, number[]> = new Map([\n    [canvas, initialSize],\n  ])\n\n  const onResize = (entries: any[]) => {\n    for (const entry of entries) {\n      let width\n      let height\n      let dpr = window.devicePixelRatio\n      if (entry.devicePixelContentBoxSize) {\n        // NOTE: Only this path gives the correct answer\n        // The other paths are imperfect fallbacks\n        // for browsers that don't provide anyway to do this\n        width = entry.devicePixelContentBoxSize[0].inlineSize\n        height = entry.devicePixelContentBoxSize[0].blockSize\n        dpr = 1 // it's already in width and height\n      } else if (entry.contentBoxSize) {\n        if (entry.contentBoxSize[0]) {\n          width = entry.contentBoxSize[0].inlineSize\n          height = entry.contentBoxSize[0].blockSize\n        } else {\n          width = entry.contentBoxSize.inlineSize\n          height = entry.contentBoxSize.blockSize\n        }\n      } else {\n        width = entry.contentRect.width\n        height = entry.contentRect.height\n      }\n      const displayWidth = Math.round(width * dpr)\n      const displayHeight = Math.round(height * dpr)\n      canvasToDisplaySizeMap.set(entry.target, [displayWidth, displayHeight])\n    }\n  }\n\n  const resizeObserver = new ResizeObserver(onResize)\n  resizeObserver.observe(canvas, { box: 'content-box' })\n\n  const resizeCanvasToDisplaySize = (): boolean => {\n    // Get the size the browser is displaying the canvas in device pixels.\n    const [displayWidth, displayHeight] = canvasToDisplaySizeMap.get(canvas)\n\n    // Check if the canvas is not the same size.\n    const needResize =\n      canvas.width !== displayWidth || canvas.height !== displayHeight\n\n    if (needResize) {\n      // Make the canvas the same size\n      canvas.width = displayWidth\n      canvas.height = displayHeight\n    }\n    return needResize\n  }\n\n  return { resizeCanvasToDisplaySize }\n}\n\nexport type CanvasResizer = {\n  resizeCanvasToDisplaySize: () => boolean\n}\n\nconst createShader = (\n  gl: WebGL2RenderingContext,\n  type: number,\n  source: string\n): WebGLShader => {\n  const shader = gl.createShader(type)\n  gl.shaderSource(shader, source)\n  gl.compileShader(shader)\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\n  if (success) {\n    return shader\n  }\n\n  console.log(gl.getShaderInfoLog(shader))\n  gl.deleteShader(shader)\n}\n\nconst createProgram = (\n  gl: WebGL2RenderingContext,\n  shaders: [WebGLShader, WebGLShader]\n): WebGLProgram => {\n  const [vertexShader, fragmentShader] = shaders\n\n  const program = gl.createProgram()\n  gl.attachShader(program, vertexShader)\n  gl.attachShader(program, fragmentShader)\n  gl.linkProgram(program)\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS)\n  if (success) {\n    return program\n  }\n\n  console.log(gl.getProgramInfoLog(program))\n  gl.deleteProgram(program)\n}\n\nexport const createProgramFromSources = (\n  gl: WebGL2RenderingContext,\n  sources: [string, string]\n): WebGLProgram => {\n  const [vert, frag] = sources\n  return createProgram(gl, [\n    createShader(gl, gl.VERTEX_SHADER, vert),\n    createShader(gl, gl.FRAGMENT_SHADER, frag),\n  ])\n}\n","import vertexShaderSource from './shaders/helloworld.vert'\nimport fragmentShaderSource from './shaders/helloworld.frag'\nimport { createProgramFromSources, observeAndResizeCanvas } from './webglUtils'\n\nconst main = () => {\n  // Get a WebGL 2 context\n  const canvas: HTMLCanvasElement = document.querySelector('#c')\n  const gl = canvas.getContext('webgl2')\n  if (!gl) {\n    console.error(\"Couldn't activate webgl2 context\")\n  }\n\n  // Lint the two shaders into a program\n  const program = createProgramFromSources(gl, [\n    vertexShaderSource,\n    fragmentShaderSource,\n  ])\n\n  // Look up where the vertex data needs to go\n  const positionAttributeLocation = gl.getAttribLocation(program, 'a_position')\n\n  // look up uniform locations\n  const resolutionUniformLocation = gl.getUniformLocation(\n    program,\n    'u_resolution'\n  )\n\n  // Create a buffer and put three 2d clip space points in it\n  const positionBuffer = gl.createBuffer()\n\n  // Bind it to ARRAY_BUFFER\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer)\n  // three 2d points\n  const positions = [10, 20, 80, 20, 10, 30, 10, 30, 80, 20, 80, 30]\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW)\n\n  // Create a vertex array object\n  const vao = gl.createVertexArray()\n\n  // and make it the one we're currently working with\n  gl.bindVertexArray(vao)\n\n  // turn it on\n  gl.enableVertexAttribArray(positionAttributeLocation)\n\n  // tell the attribute how to get data out of positionBuffer\n  const size = 2 // 2 components per iteration\n  const type = gl.FLOAT // the data is 32bit floats\n  const normalize = false // don't normalize the data\n  const stride = 0 // 0 = move forward size * sizeof(type) each iteration to get the next position\n  const offset = 0 // start at the beginning of the buffer\n  gl.vertexAttribPointer(\n    positionAttributeLocation,\n    size,\n    type,\n    normalize,\n    stride,\n    offset\n  )\n\n  // resize canvas\n  const resizer = observeAndResizeCanvas(gl.canvas, [300, 150])\n\n  const drawScene = () => {\n    resizer.resizeCanvasToDisplaySize()\n\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n\n    // Clear the canvas\n    gl.clearColor(0, 0, 0, 0)\n    gl.clear(gl.COLOR_BUFFER_BIT)\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(program)\n\n    // Pass in the canvas resolution so we can convert from pizels to clip space in the shader\n    gl.uniform2f(resolutionUniformLocation, gl.canvas.width, gl.canvas.height)\n\n    // Bind the attribute/buffer set we want.\n    gl.bindVertexArray(vao)\n\n    // draw\n    const primitiveType = gl.TRIANGLES\n    const offset = 0\n    const count = 6\n    gl.drawArrays(primitiveType, offset, count)\n\n    requestAnimationFrame(drawScene)\n  }\n\n  requestAnimationFrame(drawScene)\n}\n\nmain()\n"],"names":[],"sourceRoot":""}