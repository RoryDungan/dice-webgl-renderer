(()=>{"use strict";var e={967:e=>{e.exports="#version 300 es\n\nprecision highp float;\n\n// the varied color passed from the vertex shader\nin vec4 v_color;\n\n// we need to declare an output for the fragment shader\nout vec4 outColor;\n\nvoid main() {\n  outColor = v_color;\n}\n"},332:e=>{e.exports="#version 300 es\n\n// an attribute is an input (in) to a vertex shader.\n// It will receive data from a buffer\nin vec4 a_position;\nin vec4 a_color;\n\n// A matrix to transform the positions by\nuniform mat4 u_matrix;\n\n// a varying the color to the fragment shader\nout vec4 v_color;\n\n// all shaders have a main function\nvoid main() {\n  // Divide x and y by z\n  gl_Position = u_matrix * a_position;\n\n  // Pass the color to the fragment shader.\n  v_color = a_color;\n}\n"}},n={};function t(a){var r=n[a];if(void 0!==r)return r.exports;var i=n[a]={exports:{}};return e[a](i,i.exports,t),i.exports}(()=>{var e=t(332),n=t(967);const a=(e,n,t)=>{const a=e.createShader(n);if(e.shaderSource(a,t),e.compileShader(a),e.getShaderParameter(a,e.COMPILE_STATUS))return a;console.log(e.getShaderInfoLog(a)),e.deleteShader(a)},r=function(){const e={};return window.hackedParams&&Object.keys(window.hackedParams).forEach((function(n){e[n]=window.hackedParams[n]})),window.location.search&&window.location.search.substring(1).split("&").forEach((function(n){const t=n.split("=").map((function(e){return decodeURIComponent(e)}));e[t[0]]=t[1]})),e}();function i(e,n){const t=document.querySelector(e);if(!t)return;const a=document.createElement("div");return t.appendChild(a),function(e,n){const t=n.precision||0;let a=n.min||0;const i=n.step||1;let o=n.value||0,c=n.max||1;const s=n.slide,u=r["ui-"+n.name]||n.name,l=void 0===n.uiPrecision?t:n.uiPrecision,d=n.uiMult||1;a/=i,c/=i,o/=i,e.innerHTML=`\n      <div class="gman-widget-outer">\n        <div class="gman-widget-label">${u}</div>\n        <div class="gman-widget-value"></div>\n        <input class="gman-widget-slider" type="range" min="${a}" max="${c}" value="${o}" />\n      </div>\n    `;const m=e.querySelector(".gman-widget-value"),v=e.querySelector(".gman-widget-slider");function h(e){m.textContent=(e*i*d).toFixed(l)}function f(e){const n=parseInt(e.target.value);h(n),s(e,{value:n*i})}return h(o),v.addEventListener("input",f),v.addEventListener("change",f),{elem:e,updateValue:e=>{e/=i,v.value=String(e),h(e)}}}(a,n)}const o=e=>e*Math.PI/180,c=e=>180*e/Math.PI,s=e=>{const n=Math.cos(e),t=Math.sin(e);return[1,0,0,0,0,n,t,0,0,-t,n,0,0,0,0,1]},u=e=>{const n=Math.cos(e),t=Math.sin(e);return[n,0,-t,0,0,1,0,0,t,0,n,0,0,0,0,1]},l=e=>{const n=Math.cos(e),t=Math.sin(e);return[n,t,0,0,-t,n,0,0,0,0,1,0,0,0,0,1]},d=(e,n)=>{const t=n[0],a=n[1],r=n[2],i=n[3],o=n[4],c=n[5],s=n[6],u=n[7],l=n[8],d=n[9],m=n[10],v=n[11],h=n[12],f=n[13],g=n[14],p=n[15],x=e[0],A=e[1],w=e[2],_=e[3],E=e[4],b=e[5],S=e[6],P=e[7],R=e[8],T=e[9],y=e[10],C=e[11],F=e[12],I=e[13],L=e[14],M=e[15];return[t*x+a*E+r*R+i*F,t*A+a*b+r*T+i*I,t*w+a*S+r*y+i*L,t*_+a*P+r*C+i*M,o*x+c*E+s*R+u*F,o*A+c*b+s*T+u*I,o*w+c*S+s*y+u*L,o*_+c*P+s*C+u*M,l*x+d*E+m*R+v*F,l*A+d*b+m*T+v*I,l*w+d*S+m*y+v*L,l*_+d*P+m*C+v*M,h*x+f*E+g*R+p*F,h*A+f*b+g*T+p*I,h*w+f*S+g*y+p*L,h*_+f*P+g*C+p*M]},m=(e,n,t,a)=>{const r=Math.tan(.5*Math.PI-.5*e),i=1/(t-a);return[r/n,0,0,0,0,r,0,0,0,0,(t+a)*i,-1,0,0,t*a*i*2,0]};(()=>{const t=document.querySelector("#c"),r=t.getContext("webgl2");if(!r)return void(e=>{const n=document.createElement("div");n.className="error";const t=document.createElement("p");t.appendChild(document.createTextNode("Sorry, your browser doesn't seem to support WebGL 2 :(")),n.appendChild(t);const a=document.createElement("p");a.appendChild(document.createTextNode("Try running in the latest Firefox or Chrome.")),n.appendChild(a),e.appendChild(n)})(t);const v=((e,n)=>{const[t,r]=n;return((e,n)=>{const[t,a]=n,r=e.createProgram();if(e.attachShader(r,t),e.attachShader(r,a),e.linkProgram(r),e.getProgramParameter(r,e.LINK_STATUS))return r;console.log(e.getProgramInfoLog(r)),e.deleteProgram(r)})(e,[a(e,e.VERTEX_SHADER,t),a(e,e.FRAGMENT_SHADER,r)])})(r,[e,n]),h=r.getAttribLocation(v,"a_position"),f=r.getAttribLocation(v,"a_color"),g=r.getUniformLocation(v,"u_matrix");let p=o(60);const x=r.createBuffer(),A=r.createVertexArray();r.bindVertexArray(A),r.enableVertexAttribArray(h),r.bindBuffer(r.ARRAY_BUFFER,x),function(e){e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,0,0,150,0,30,0,0,0,150,0,30,150,0,30,0,0,30,0,0,30,30,0,100,0,0,30,30,0,100,30,0,100,0,0,30,60,0,30,90,0,67,60,0,30,90,0,67,90,0,67,60,0,0,0,30,30,0,30,0,150,30,0,150,30,30,0,30,30,150,30,30,0,30,100,0,30,30,30,30,30,30,30,100,0,30,100,30,30,30,60,30,67,60,30,30,90,30,30,90,30,67,60,30,67,90,30,0,0,0,100,0,0,100,0,30,0,0,0,100,0,30,0,0,30,100,0,0,100,30,0,100,30,30,100,0,0,100,30,30,100,0,30,30,30,0,30,30,30,100,30,30,30,30,0,100,30,30,100,30,0,30,30,0,30,60,30,30,30,30,30,30,0,30,60,0,30,60,30,30,60,0,67,60,30,30,60,30,30,60,0,67,60,0,67,60,30,67,60,0,67,90,30,67,60,30,67,60,0,67,90,0,67,90,30,30,90,0,30,90,30,67,90,30,30,90,0,67,90,30,67,90,0,30,90,0,30,150,30,30,90,30,30,90,0,30,150,0,30,150,30,0,150,0,0,150,30,30,150,30,0,150,0,30,150,30,30,150,0,0,0,0,0,0,30,0,150,30,0,0,0,0,150,30,0,150,0]),e.STATIC_DRAW)}(r);const w=r.FLOAT;r.vertexAttribPointer(h,3,w,!1,0,0);const _=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,_),function(e){e.bufferData(e.ARRAY_BUFFER,new Uint8Array([200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,200,70,120,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,80,70,200,70,200,210,70,200,210,70,200,210,70,200,210,70,200,210,70,200,210,200,200,70,200,200,70,200,200,70,200,200,70,200,200,70,200,200,70,210,100,70,210,100,70,210,100,70,210,100,70,210,100,70,210,100,70,210,160,70,210,160,70,210,160,70,210,160,70,210,160,70,210,160,70,70,180,210,70,180,210,70,180,210,70,180,210,70,180,210,70,180,210,100,70,210,100,70,210,100,70,210,100,70,210,100,70,210,100,70,210,76,210,100,76,210,100,76,210,100,76,210,100,76,210,100,76,210,100,140,210,80,140,210,80,140,210,80,140,210,80,140,210,80,140,210,80,90,130,110,90,130,110,90,130,110,90,130,110,90,130,110,90,130,110,160,160,220,160,160,220,160,160,220,160,160,220,160,160,220,160,160,220]),e.STATIC_DRAW)}(r),r.enableVertexAttribArray(f),r.vertexAttribPointer(f,3,r.UNSIGNED_BYTE,!0,0,0);const E=[-150,0,-360],b=[o(0),o(170),o(170)],S=[1,1,1];function P(e){return(n,t)=>{E[e]=t.value,y()}}function R(e){return(n,t)=>{const a=t.value;b[e]=o(a),y()}}function T(e){return(n,t)=>{S[e]=t.value,y()}}function y(){((e,n)=>{n=n||1;const t=e.clientWidth*n|0,a=e.clientHeight*n|0;(e.width!==t||e.height!==a)&&(e.width=t,e.height=a)})(r.canvas,window.devicePixelRatio),r.enable(r.CULL_FACE),r.enable(r.DEPTH_TEST),r.viewport(0,0,r.canvas.width,r.canvas.height),r.clearColor(0,0,0,0),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),r.useProgram(v),r.bindVertexArray(A);const e=r.canvas.clientWidth/r.canvas.clientHeight,n=[m(p,e,1,2e3),(o=E[0],c=E[1],h=E[2],[1,0,0,0,0,1,0,0,0,0,1,0,o,c,h,1]),s(b[0]),u(b[1]),l(b[2]),(t=S[0],a=S[1],i=S[2],[t,0,0,0,0,a,0,0,0,0,i,0,0,0,0,1])].reduce(d);var t,a,i,o,c,h;r.uniformMatrix4fv(g,!1,n);const f=r.TRIANGLES;r.drawArrays(f,0,96)}y(),i("#ui",{name:"fieldOfView",slide:(e,n)=>{p=o(n.value),y()},min:10,max:180,precision:3,step:.01,value:c(p)}),i("#ui",{name:"x",slide:P(0),min:-r.canvas.width,max:r.canvas.width,value:E[0]}),i("#ui",{name:"y",slide:P(1),min:-r.canvas.height,max:r.canvas.height,value:E[1]}),i("#ui",{name:"z",slide:P(2),min:-400,max:400,value:E[2]}),i("#ui",{name:"angleX",slide:R(0),max:360,value:c(b[0])}),i("#ui",{name:"angleY",slide:R(1),max:360,value:c(b[1])}),i("#ui",{name:"angleZ",slide:R(2),max:360,value:c(b[2])}),i("#ui",{name:"scaleX",value:S[0],slide:T(0),min:-5,max:5,step:.01,precision:2}),i("#ui",{name:"scaleY",value:S[1],slide:T(1),min:-5,max:5,step:.01,precision:2}),i("#ui",{name:"scaleZ",value:S[1],slide:T(2),min:-5,max:5,step:.01,precision:2})})()})()})();
//# sourceMappingURL=3d-perspective.bundle.js.map